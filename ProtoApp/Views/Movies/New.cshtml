@model ProtoApp.ViewModels.MovieGenreViewModel
@{
    ViewBag.Title = "New";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h2>@Model.Title</h2>
@using (@Html.BeginForm("Save", "Movies"))
{
    @Html.ValidationSummary(true)
    <div class="form-group">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.Name)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.ReleaseDate)
        @Html.TextBoxFor(m => m.ReleaseDate, "{0:d MMM yyyy}", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.ReleaseDate)
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.GenreID)
        @Html.DropDownListFor(m => m.GenreID, new SelectList(Model.Genres, "Id", "Name"), "Select Genre", new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.GenreID)
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NumberInStock)
        @Html.TextBoxFor(m => m.NumberInStock, new { @class = "form-control" })
        @Html.ValidationMessageFor(m => m.NumberInStock)
    </div>
    @Html.HiddenFor(m => m.Id)
    @Html.AntiForgeryToken()

    //Code will break if properties are renamed with this approach
    //@Html.Hidden("Movie.Id", (Model.Movie != null) ? Model.Id : 0 )
    
    <button type="submit" class="btn btn-primary ">
        Save
    </button>
}

@Scripts.Render("~/bundles/jqueryval")

