@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}

<h2>New Rental Form</h2>

<form id="newRental" action="">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" required type="text" value="" 
                   data-rule-validCustomer="true"  
                   class="form-control" />
        </div>
    </div>
    <div class="form-group">
        <label>Movie</label>
        <div class="tt-container">
            <input id="movie" name="movie"  type="text" value="" 
                   data-rule-validMovies="true" class="form-control" />   
        </div>
    </div>

    <div class="row">
        <div class="col-md-4"> 
            <ul id="movies" class="list-group">
                </ul> </div>
    </div>
    
    

    <button class="btn btn-primary">Submit</button>
</form>


@section scripts
{
   
    <script>
        $(document).ready(function () {

            var vm = {
                movieIds: []
            };


            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                minLength: 3,
                highlight: true
            }
                , {
                    name: 'customers',
                    display: 'name',
                    source: customers
                }).on("typeahead:select", function (e, customer) {
                    vm.customerId = customer.id;
                    console.log(vm.customerId);
                });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });
            $('#movie').typeahead({
                minLength: 3,
                highlight: true
            }, {
                name: 'movies',
                display: 'name',
                source: movies
            }).on("typeahead:select", function (e, movie) {
                $("#movies").append("<li class='list-group-item'>" + movie.name + "</li>");
                $("#movie").typeahead("val", ""); //clear the textbox after adding the value to the list
                vm.movieIds.push(movie.id);
                console.log(vm.movieIds);
            });



            $.validator.addMethod("validCustomer", function () {
                console.log(vm);
                return vm.customerId && vm.customerId !== 0;
            }, "Please select a valid customer");

            $.validator.addMethod("validMovies", function () {
                console.log("movies added");
                return vm.movieIds.length > 0;
            }, "Please select at least one movie.");

            var validator = $("#newRental").validate({
                submitHandler: function ()
                {
                    console.log("handle - validator");

                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm
                    })
                        .done(function () {
                                toastr.success("Rentals successfully recorded!");
                                console.log("Rentals successfully recorded!");

                                $("#customer").typeahead("val", "");
                                $("#movie").typeahead("val", "");
                                $("#movies").empty();

                                vm = { movieIds: [] };
                                validator.resetForm();
                            })
                        .fail(function () {
                            toastr.error("An error occurred");
                            console.log("An error occurred");

                           

                        });

                    console.log("handle - validator");
                    return false;

                }
            });
        });


    </script>
}
